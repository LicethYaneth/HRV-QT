#HRV Application

import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *

class interfaz(QMainWindow):
    def __init__(self):
        super().__init__()
        self.init_window()

    def init_window(self):
        self.setObjectName("self")
        self.resize(1024, 768)
        self.setStyleSheet("background-color: rgb(32, 74, 135);")
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalFrame = QtWidgets.QFrame(self.centralwidget)
        self.horizontalFrame.setGeometry(QtCore.QRect(0, 0, 1021, 222))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalFrame.sizePolicy().hasHeightForWidth())
        self.horizontalFrame.setSizePolicy(sizePolicy)
        self.horizontalFrame.setObjectName("horizontalFrame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalFrame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.horizontalFrame)
        self.label.setMaximumSize(QtCore.QSize(1677, 1677))
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(1000, 90, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.accionDocumento1 = QtWidgets.QVBoxLayout()
        self.accionDocumento1.setSpacing(0)
        self.accionDocumento1.setObjectName("accionDocumento1")
        self.pushButton_10 = QtWidgets.QPushButton(self.horizontalFrame)
        self.pushButton_10.setObjectName("pushButton_10")
        self.accionDocumento1.addWidget(self.pushButton_10)
        self.pushButton_11 = QtWidgets.QPushButton(self.horizontalFrame)
        self.pushButton_11.setObjectName("pushButton_11")
        self.accionDocumento1.addWidget(self.pushButton_11)
        self.pushButton_12 = QtWidgets.QPushButton(self.horizontalFrame)
        self.pushButton_12.setObjectName("pushButton_12")
        self.accionDocumento1.addWidget(self.pushButton_12)
        self.horizontalLayout.addLayout(self.accionDocumento1)
        self.accionDocumento2 = QtWidgets.QVBoxLayout()
        self.accionDocumento2.setContentsMargins(-1, -1, 10, -1)
        self.accionDocumento2.setSpacing(0)
        self.accionDocumento2.setObjectName("accionDocumento2")
        self.pushButton = QtWidgets.QPushButton(self.horizontalFrame)
        self.pushButton.setObjectName("pushButton")
        self.accionDocumento2.addWidget(self.pushButton)
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalFrame)
        self.pushButton_3.setObjectName("pushButton_3")
        self.accionDocumento2.addWidget(self.pushButton_3)
        self.pushButton_2 = QtWidgets.QPushButton(self.horizontalFrame)
        self.pushButton_2.setObjectName("pushButton_2")
        self.accionDocumento2.addWidget(self.pushButton_2)
        self.horizontalLayout.addLayout(self.accionDocumento2)
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1024, 22))
        self.menubar.setObjectName("menubar")
        self.menuArchivo = QtWidgets.QMenu(self.menubar)
        self.menuArchivo.setObjectName("menuArchivo")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(self)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(self)
        self.actionSave.setObjectName("actionSave")
        self.actionDownload = QtWidgets.QAction(self)
        self.actionDownload.setObjectName("actionDownload")
        self.actionExport_PDF = QtWidgets.QAction(self)
        self.actionExport_PDF.setObjectName("actionExport_PDF")
        self.actionExit = QtWidgets.QAction(self)
        self.actionExit.setObjectName("actionExit")
        self.menuArchivo.addAction(self.actionOpen)
        self.menuArchivo.addAction(self.actionSave)
        self.menuArchivo.addAction(self.actionDownload)
        self.menuArchivo.addAction(self.actionExport_PDF)
        self.menuArchivo.addAction(self.actionExit)
        self.menubar.addAction(self.menuArchivo.menuAction())

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "AHRV"))
        self.label.setText(_translate("self", "<html><head/><body><p><img src=\":/logo/logo.svg\"/></p></body></html>"))
        self.pushButton_10.setText(_translate("self", "Complete brief"))
        self.pushButton_11.setText(_translate("self", "Normal Graphic"))
        self.pushButton_12.setText(_translate("self", "Base Line Correction"))
        self.pushButton.setText(_translate("self", "Picos R"))
        self.pushButton_3.setText(_translate("self", "MÃ©tricas de la Frecuencia"))
        self.pushButton_2.setText(_translate("self", "Export PDF"))
        self.menuArchivo.setTitle(_translate("self", "File"))
        self.actionOpen.setText(_translate("self", "Open"))
        self.actionOpen.clicked.connect(self.abrir_archivo)
        self.actionSave.setText(_translate("self", "Save"))
        self.actionDownload.setText(_translate("self", "Download"))
        self.actionExport_PDF.setText(_translate("self", "Export PDF"))
        self.actionExit.setText(_translate("self", "Exit"))

    def abrir_archivo(self):
        self.file = QFileDialog.getOpenFileName(self, "Selecciona un archivo", "/home/", "PDF Files (*.dat, *.hea)")[0]
        self.button.setText(os.path.basename(self.file))

def main():
    signal.signal(signal.SIGINT, signal.SIG_DFL)
    app = QApplication(sys.argv)
    root = Root()
    sys.exit(app.exec_())

if __name__ == "__main__":
    app = QApplication([])
    window = interfaz()
    # window.show()
    sys.exit(app.exec_())